# course illustrations
introduction_tools: &introduction_tools |
    +-----------------+
    | Laptop, OS      |
    | Tool Setup      | 
    +-----------------+
       |
       | VS Code, Anaconda, Jupyter, Java Kernel
       v
    +-----------------+
    | VS Code, Develop|
    | Code Editor     | 
    +-----------------+
       |
       | Code, build, test, debug
       v
    +-----------------+
    | VS Code, Git    |
    | Version Control |       | 
    +-----------------+
       |
       | Commit local versions, track change
       v
    +-----------------+
    | VS Code, Project|
    | GitHub Sync     |
    +-----------------+
       |
       | Push changes to cloud Repository
       v
    +-----------------+
    | GitHub,  Collab |
    | Shared Code     |
    +-----------------+
       |
       | Actions, Jekyll build
       v
    +-----------------+
    | GitHub Pages    |
    | Showcase Project|
    +-----------------+

college_board_fundamentals: &college_board_fundamentals |
  College Board Basic Programming Units
  -------------------------------------      
    Fundamentals of Programming
    +------------------+
    | CB Unit 1        |
    | Primitive Types  | --> Types appear in Code
    | 2.5%-5%          |
    +------------------+
    +------------------+
    | Unit 3           |
    | Booleans and Ifs | --> Understand De Morgan's Law
    | 15%-17.5%        |
    +------------------+
    +------------------+
    | Unit 4           |
    | Iteration        | --> String Iteration, repeat until expression
    | 17.5%-22.5%      |
    +------------------+
    +------------------+
    | Unit 10 - Part 1 |
    | Recursion        | --> Base case and recursive call
    | 5%-7.5%          |
    +------------------+
            |
    Fundamentals of Java
    +------------------+
    | Unit 2           |
    | Using Objects    | --> Instance vs Static, Methods, APIs, ... 
    | 5%-7.5%          |
    +------------------+
    +------------------+
    | Unit 5           |
    | Writing Classes  | --> Diagram a Class, constructor, setters, ... 
    | 5%-7.5%          |
    +------------------+
    +------------------+
    | Unit 9           |
    | Inheritance      | --> Extend class, polymorphism, super, this, ...
    | 5%-7.5%          |
    +------------------+
  
data_structures: &data_structures |
  Required Data Structures for Course
  -----------------------------------
    College Board Units
    +------------------+
    | Unit 6           |
    | Array            | --> Linear data structure, fixed size, algos, ...
    | 5%-7.5%          |
    +------------------+
    +------------------+
    | Unit 7           |
    | ArrayList        | --> Linear and dynamic size, Collection Framework 
    | 2.5%-7.5%        |
    +------------------+
    +------------------+
    | Unit 8           |
    | 2D Array         | --> 2D Linear dat structure, col/row order
    | 7.5%-10%         |
    +------------------+
    +------------------+
    | Unit 10 - Part 2 |
    | Search/Sort      | --> Bubble, Selection, Insertion, Merge
    | 5%-7.5%          |
    +------------------+
            |            
    College Articulated Requirements
    +------------------+
    | Java Fundamental |
    | HashMap          | --> Key-value data structure
    | B or better      |
    +------------------+
    +------------------+
    | Algorithmic      |
    | Queue,Stack,...  | --> Collections Framework
    | B or better      |
    +------------------+
    +--------------------+
    | Abstract Data Type |
    | Graph              | --> Nodes, Vertices, Edges
    | B or better        |
    +--------------------+

  Required FRQ Types by College Board
  -----------------------------------
    Each FRQ writes program code, uses expressions, conditions, and iteration 
    +--------------------+
    | Methods and        |
    | Control Structures | -->  Algoritmic challenge, use objects, call methods, ...
    | Units #1-#4        |
    +--------------------+
    +--------------------+
    | Classes            |
    |                    | -->  Define a new type by creating a class ...
    | Units #2,#5,#9     |
    +--------------------+
    +--------------------+
    | Arrays /           |
    | ArrayLists         | -->  Create, manipulate elements in 1D array or ArrayList, ...
    | Units #6,#7        |
    +--------------------+
    +--------------------+
    | 2D Array           |
    |                    | -->  Create, traverse, and manipulate elements in 2D array, ...
    | Units #6,#7        |
    +--------------------+

web_dev_layers: &web_dev_layers |
    +---------------+
    | GitHub Pages  |
    | Design, Layout|
    |   Frontend    |
    +---------------+
          |
          | User presentation, style 
          | Actions
          v
    +--------------+
    |  JavaScript  |
    | Logic/Events |
    +--------------+
          |
          | Functionality, interactivity
          | Sends HTTP requests/responses
          v
    +----------------+
    | AWS EC2 Server |
    |  Java / Spring |
    |    Backend     |
    +----------------+
          |
          | Server-Side Proccessing
          | Analysis, POJOs, ORM, JPA
          | Communicate with AWS Services
          v
    +----------------+
    |  AWS Services  |
    |   Store Data   |
    +----------------+

# CSA course meta data
Sprint1:
  title: October
  description: Mostly frontend wireframes and experiments. Will have most of the learning in for the project
  start: 0
  end: 3
Sprint2:
  title: November
  description: Final week before N@TM shows all the lives deployed products.
  start: 4
  end: 4
